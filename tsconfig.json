{
/*
    tsconfig.json 是ts便一起的配置文件，ts编译器可以根据它的信息来对代码进行编译
    “include” 用来指定哪些ts文件需要编译
        路径 ** 表示任意目录
             *  表示任意文件
    exclude 不需要ts编译的文件目录

    */
"include": [
    "src"
    //   "./src/**/*"
  ],
  "exclude": [
    "lib",
    "node_modules",
    "build",
    "**/node_modules",
    "**/lib",
    "**/build",
    "scripts",
    "acceptance-tests",
    "webpack",
    "jest",
    "src/setupTests.ts",
    "tslint:latest",
    "tslint-config-prettier",
    "./src/pages/approveForm/index.tsx"
  ],
  "compilerOptions": {
    //   指定ts被编译为ES的版本 默认编译到ES3; esnext指最新版版
    // 'es3','es5','es6','es6','es2016','es2017','es2018', .... 'esnext'
      "target": "esnext", 
    /* 指定使用模块化规范 module Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
      "module": "ES2015",
    //   项目用到哪些库
    "lib": [
        "es6",
        "dom",//document
        "dom.iterable",
        "es7",
        "es2017.object"
      ],
    //   编译后的文件放的位置，js=>ts放的位置
      "outDir": "./dist",
    //   将编译后的文件代码合并至一个文件
      "outFile": "./dist/app.js",
    //   是否对js文件进行编译
    // 严格检查总开关
    "strict": false,
      "allowJs": false,
    //   是否对js文件进行语法检查
    "checkJs": false,
    //   是否对移除注释
    "removeComments": false,
    // 不生成编译后的文件
    "noEmit": false,
    // 有错误就不编译了
    "noEmitOnError": false,
    // 编译后的文件是否采用严格模式 ”use strict“
    "alwaysStrict": true,
    // 有些没有规定类型，默认给一个 any,现在则不允许
    "noImplicitAny": false,



  }
}